Classfile /E:/workspace_train/thread/target/classes/com/train/thread01/VolatileAtomicityDemo.class
  Last modified 2018-11-16; size 1566 bytes
  MD5 checksum 66db7aa3060f94475efd4ed9d593970a
  Compiled from "VolatileAtomicityDemo.java"
public class com.train.thread01.VolatileAtomicityDemo
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Methodref          #12.#36        // java/lang/Object."<init>":()V
   #2 = Fieldref           #9.#37         // com/train/thread01/VolatileAtomicityDemo.count:I
   #3 = Class              #38            // java/lang/Thread
   #4 = InvokeDynamic      #0:#43         // #0:run:()Ljava/lang/Runnable;
   #5 = Methodref          #3.#44         // java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
   #6 = Methodref          #3.#45         // java/lang/Thread.start:()V
   #7 = Fieldref           #46.#47        // java/lang/System.out:Ljava/io/PrintStream;
   #8 = Methodref          #48.#49        // java/io/PrintStream.println:(I)V
   #9 = Class              #50            // com/train/thread01/VolatileAtomicityDemo
  #10 = Methodref          #9.#36         // com/train/thread01/VolatileAtomicityDemo."<init>":()V
  #11 = Methodref          #9.#51         // com/train/thread01/VolatileAtomicityDemo.inc:()V
  #12 = Class              #52            // java/lang/Object
  #13 = Utf8               count
  #14 = Utf8               I
  #15 = Utf8               <init>
  #16 = Utf8               ()V
  #17 = Utf8               Code
  #18 = Utf8               LineNumberTable
  #19 = Utf8               LocalVariableTable
  #20 = Utf8               this
  #21 = Utf8               Lcom/train/thread01/VolatileAtomicityDemo;
  #22 = Utf8               inc
  #23 = Utf8               StackMapTable
  #24 = Class              #50            // com/train/thread01/VolatileAtomicityDemo
  #25 = Class              #52            // java/lang/Object
  #26 = Class              #53            // java/lang/Throwable
  #27 = Utf8               main
  #28 = Utf8               ([Ljava/lang/String;)V
  #29 = Utf8               j
  #30 = Utf8               args
  #31 = Utf8               [Ljava/lang/String;
  #32 = Utf8               lambda$main$0
  #33 = Utf8               <clinit>
  #34 = Utf8               SourceFile
  #35 = Utf8               VolatileAtomicityDemo.java
  #36 = NameAndType        #15:#16        // "<init>":()V
  #37 = NameAndType        #13:#14        // count:I
  #38 = Utf8               java/lang/Thread
  #39 = Utf8               BootstrapMethods
  #40 = MethodHandle       #6:#54         // invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #41 = MethodType         #16            //  ()V
  #42 = MethodHandle       #6:#55         // invokestatic com/train/thread01/VolatileAtomicityDemo.lambda$main$0:()V
  #43 = NameAndType        #56:#57        // run:()Ljava/lang/Runnable;
  #44 = NameAndType        #15:#58        // "<init>":(Ljava/lang/Runnable;)V
  #45 = NameAndType        #59:#16        // start:()V
  #46 = Class              #60            // java/lang/System
  #47 = NameAndType        #61:#62        // out:Ljava/io/PrintStream;
  #48 = Class              #63            // java/io/PrintStream
  #49 = NameAndType        #64:#65        // println:(I)V
  #50 = Utf8               com/train/thread01/VolatileAtomicityDemo
  #51 = NameAndType        #22:#16        // inc:()V
  #52 = Utf8               java/lang/Object
  #53 = Utf8               java/lang/Throwable
  #54 = Methodref          #66.#67        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #55 = Methodref          #9.#68         // com/train/thread01/VolatileAtomicityDemo.lambda$main$0:()V
  #56 = Utf8               run
  #57 = Utf8               ()Ljava/lang/Runnable;
  #58 = Utf8               (Ljava/lang/Runnable;)V
  #59 = Utf8               start
  #60 = Utf8               java/lang/System
  #61 = Utf8               out
  #62 = Utf8               Ljava/io/PrintStream;
  #63 = Utf8               java/io/PrintStream
  #64 = Utf8               println
  #65 = Utf8               (I)V
  #66 = Class              #69            // java/lang/invoke/LambdaMetafactory
  #67 = NameAndType        #70:#74        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #68 = NameAndType        #32:#16        // lambda$main$0:()V
  #69 = Utf8               java/lang/invoke/LambdaMetafactory
  #70 = Utf8               metafactory
  #71 = Class              #76            // java/lang/invoke/MethodHandles$Lookup
  #72 = Utf8               Lookup
  #73 = Utf8               InnerClasses
  #74 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #75 = Class              #77            // java/lang/invoke/MethodHandles
  #76 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #77 = Utf8               java/lang/invoke/MethodHandles
{
  static volatile int count;
    descriptor: I
    flags: ACC_STATIC, ACC_VOLATILE

  public com.train.thread01.VolatileAtomicityDemo();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 8: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/train/thread01/VolatileAtomicityDemo;

  public void inc();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=1
         0: aload_0
         1: dup
         2: astore_1
         3: monitorenter
         4: getstatic     #2                  // Field count:I
         7: iconst_1
         8: iadd
         9: putstatic     #2                  // Field count:I
        12: aload_1
        13: monitorexit
        14: goto          22
        17: astore_2
        18: aload_1
        19: monitorexit
        20: aload_2
        21: athrow
        22: return
      Exception table:
         from    to  target type
             4    14    17   any
            17    20    17   any
      LineNumberTable:
        line 13: 0
        line 14: 4
        line 15: 12
        line 16: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/train/thread01/VolatileAtomicityDemo;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class com/train/thread01/VolatileAtomicityDemo, class java/lang/Object ]
          stack = [ class java/lang/Throwable ]
        frame_type = 250 /* chop */
          offset_delta = 4

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: iconst_0
         1: istore_1
         2: iload_1
         3: sipush        1000
         6: if_icmpge     30
         9: new           #3                  // class java/lang/Thread
        12: dup
        13: invokedynamic #4,  0              // InvokeDynamic #0:run:()Ljava/lang/Runnable;
        18: invokespecial #5                  // Method java/lang/Thread."<init>":(Ljava/lang/Runnable;)V
        21: invokevirtual #6                  // Method java/lang/Thread.start:()V
        24: iinc          1, 1
        27: goto          2
        30: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        33: getstatic     #2                  // Field count:I
        36: invokevirtual #8                  // Method java/io/PrintStream.println:(I)V
        39: return
      LineNumberTable:
        line 20: 0
        line 22: 9
        line 25: 21
        line 20: 24
        line 27: 30
        line 28: 39
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            2      28     1     j   I
            0      40     0  args   [Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 2
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 27

  private static void lambda$main$0();
    descriptor: ()V
    flags: ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: new           #9                  // class com/train/thread01/VolatileAtomicityDemo
         3: dup
         4: invokespecial #10                 // Method "<init>":()V
         7: invokevirtual #11                 // Method inc:()V
        10: return
      LineNumberTable:
        line 24: 0
        line 25: 10

  static {};
    descriptor: ()V
    flags: ACC_STATIC
    Code:
      stack=1, locals=0, args_size=0
         0: iconst_0
         1: putstatic     #2                  // Field count:I
         4: return
      LineNumberTable:
        line 10: 0
}
SourceFile: "VolatileAtomicityDemo.java"
InnerClasses:
     public static final #72= #71 of #75; //Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
BootstrapMethods:
  0: #40 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #41 ()V
      #42 invokestatic com/train/thread01/VolatileAtomicityDemo.lambda$main$0:()V
      #41 ()V
