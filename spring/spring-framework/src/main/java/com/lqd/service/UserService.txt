package com.lqd.service;

import com.lqd.repository.Address;
import com.lqd.repository.User;
import org.springframework.beans.factory.InitializingBean;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.context.annotation.Scope;
import org.springframework.jdbc.core.BeanPropertyRowMapper;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import javax.annotation.PostConstruct;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 * @ClassName UserService
 * @Description TODO
 * @Author lqd
 * @Date 2018/12/9 9:23
 * @Version 1.0
 **/
@Service
@Scope(value="singleton")
@Lazy
public class UserService implements InitializingBean
{
    public UserService()
    {
        System.out.println("UserService cinit");
    }

    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Autowired
    private JdbcTemplate jdbcTemplate_user ;

    @Autowired
    private JdbcTemplate jdbcTemplate_address ;

    @Autowired
    private AddressService addressService;

    @Transactional(rollbackFor = Exception.class)
    public void saveJtaUser(User user) throws IOException
    {
        saveUser(user);
        jdbcTemplate_address.execute("insert into t_e_address(address,id) values" +
                " ('"+user.getAddress()+"',nextval('seq_t_e_address'))");
    }

    @Transactional(rollbackFor = Exception.class)
    public void saveUser(User user) throws IOException {

       /* try {*/
            jdbcTemplate.execute("insert into t_e_user(username,address,id) values" +
                    " ('"+user.getUserName()+"','"+user.getAddress()+"',nextval('seq_t_e_user'))");
            addressService.saveAddress(new Address(user.getAddress()));
            throw new IOException();
        /*} catch (Exception e) {
            e.printStackTrace();
        }*/
    }

    public void saveUserMyTransaction(User user) throws SQLException {

        String sql = "insert into t_e_user(username,address,id) values" +
                " ('"+user.getUserName()+"','"+user.getAddress()+"',nextval('seq_t_e_user'))" ;
        Connection connection =
                jdbcTemplate.getDataSource().getConnection();
        connection.setAutoCommit(false);
        try {
            PreparedStatement preparedStatement = connection.prepareStatement(sql) ;
            preparedStatement.execute();
            //throw new SQLException();
        } catch (SQLException e) {
           connection.rollback();
        } finally {
            connection.commit();
        }
    }

    public List<User> getUserList()
    {
        List<User> userList = jdbcTemplate.query("select * from t_e_user",
            new BeanPropertyRowMapper<>(User.class));
        System.out.println("Hi");
        return userList;
    }

    @PostConstruct
    public void postConstruct(){
        System.out.println("postConstruct");
    }

    @Override
    public void afterPropertiesSet() throws Exception {
        System.out.println("afterPropertiesSet");
    }
}
